name: LINUX_OS

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  code_coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level:
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 31
          - 32
          - 33
          - 34
          - 35
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup directory AVD
        run: |
          ANDROID_AVD_DIR=~/.android/avd
          mkdir -pv $ANDROID_AVD_DIR
          sudo mount -v none -t tmpfs -o rw,noatime,nodiratime,size=100%,nr_inodes=0,mode=755,uid=$USER,gid=$USER,inode64 $ANDROID_AVD_DIR

      - name: Setup directory Gradle
        run: |
          GRADLE_DIR=~/.gradle
          mkdir -pv $GRADLE_DIR
          sudo mount -v none -t tmpfs -o rw,noatime,nodiratime,size=100%,nr_inodes=0,mode=755,uid=$USER,gid=$USER,inode64 $GRADLE_DIR

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "oracle"

#      - name: Gradle cache
#        uses: actions/cache@v4
#        id: gradle-cache
#        with:
#          path: |
#            ~/.gradle
#            ~/.m2
#          key: gradle-${{ github.job }}-${{ hashFiles('versions.gradle') }}

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            /usr/local/lib/android/sdk/system-images
          key: avd-${{ matrix.api-level }}

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install AVD dependencies
        run: |
          sudo apt install --no-install-suggests --no-install-recommends mesa-vulkan-drivers libpulse0 -y

      - name: Start AVD
        env:
          API_LEVEL: ${{ matrix.api-level }}
        run: |
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
          echo yes | sdkmanager --licenses > /dev/null
          sdkmanager --install "cmdline-tools;latest" --channel=0 > /dev/null
          echo y | sdkmanager --install emulator --channel=0 > /dev/null
          echo y | sdkmanager --install "system-images;android-$API_LEVEL;default;x86_64" --channel=0 > /dev/null
          avdmanager create avd --force -n test -k "system-images;android-$API_LEVEL;default;x86_64" -d "17"
          sdkmanager --install platform-tools --channel=0> /dev/null
          export PATH=$PATH:$ANDROID_HOME/platform-tools
          adb kill-server
          adb start-server
          export PATH=$PATH:$ANDROID_HOME/emulator
          if [ $API_LEVEL -lt 26 ]; then
            emulator -avd test -metrics-collection -log-nofilter -no-boot-anim -nocache -no-snapstorage -no-snapshot -no-snapshot-load -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -camera-back none -accel on -memory $(expr 1024 \* 2) -cores 2 &
          else
            emulator -avd test -metrics-collection -log-nofilter -no-boot-anim -nocache -no-snapstorage -no-snapshot -no-snapshot-load -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -camera-back none -accel on -qemu -cpu host,kvm=on -smp $(nproc) -m $(expr 1024 \* 6) &
          fi

      - name: Run code coverage
        run: |
          export PATH=$PATH:$ANDROID_HOME/platform-tools
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0
          adb shell input keyevent 82
          ./gradlew debugCodeCoverage

      - name: Uploading code coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage_api-level-${{ matrix.api-level }}
          overwrite: true
          path: build/jacoco_code_coverage
          compression-level: 9

  publish_to_maven_local:
    runs-on: ubuntu-latest
    needs:
      - code_coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup directory Gradle
        run: |
          GRADLE_DIR=~/.gradle
          mkdir -pv $GRADLE_DIR
          sudo mount -v none -t tmpfs -o rw,noatime,nodiratime,size=100%,nr_inodes=0,mode=755,uid=$USER,gid=$USER,inode64 $GRADLE_DIR

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "oracle"

      - name: Gradle cache
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle
            ~/.m2
          key: gradle-${{ github.job }}-${{ hashFiles('versions.gradle') }}

      - name: Publish to maven local
        run: |
          ./gradlew clean publishToMavenLocal
          cd ~ && tar czvf /tmp/m2.tar.gz .m2/repository/id/xxx*

      - name: Uploading archive
        uses: actions/upload-artifact@v4
        with:
          name: m2.tar.gz
          path: /tmp/m2.tar.gz

  make_template_application:
    runs-on: ubuntu-latest
    needs:
      - code_coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup directory Gradle
        run: |
          GRADLE_DIR=~/.gradle
          mkdir -pv $GRADLE_DIR
          sudo mount -v none -t tmpfs -o rw,noatime,nodiratime,size=100%,nr_inodes=0,mode=755,uid=$USER,gid=$USER,inode64 $GRADLE_DIR

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "oracle"

      - name: Gradle cache
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle
            ~/.m2
          key: gradle-${{ github.job }}-${{ hashFiles('versions.gradle') }}

      - name: Assemble release
        run: |
          ./gradlew clean :templates:application:assembleRelease

      - name: Uploading apk
        uses: actions/upload-artifact@v4
        with:
          name: application-release-unsigned.apk
          path: templates/application/build/outputs/apk/release/application-release-unsigned.apk