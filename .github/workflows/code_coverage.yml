name: code_coverage

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  tests_and_coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 23 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "oracle"
          cache: gradle

      - name: Setup gradle properties
        run: |
          ORG_GRADLE_JVM=`cat gradle.properties | grep org.gradle.jvmargs`
          sed -i 's/'"${ORG_GRADLE_JVM}"'/org.gradle.jvmargs=-Xmx8192m -Dfile.encoding=UTF-8/g' gradle.properties
          cat gradle.properties

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        #        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Running tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            ./gradlew debugCodeCoverage

      - name: Uploading code coverage
        uses: actions/upload-artifact@v4
        with:
          name: code_coverage
          path: build/jacoco_code_coverage
